# This is a basic workflow to help you get started with Actions

name: Build Release

on: push
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Read Changelog
        id: read_changelog
        shell: bash
        run: |
          CHANGELOG=$(sed '/___/Q' CHANGELOG.md)
          echo "Changelog:\n$CHANGELOG"

          changelog="${CHANGELOG}"

          # Because of the 2000 char limit in Discord shorten the changelog

          # Calculate the number of characters to delete
          delete_chars=$((${#changelog} + 350 - 2000 - 15))

          # Extract the "What's Changed" section from the changelog
          changed_section=$(echo "$changelog" | awk '/## What'\''s Changed/{flag=1;next}/^$/{flag=0}flag')

          # Trim the changed_section based on the delete_chars value and remove the last line
          modified_section="${changed_section::-delete_chars}"
          modified_section=$(echo "$modified_section" | sed '$d')

          # Add "[...] and more" at the end of modified_section
          modified_section+="\n[...] and more"

          # Format modified_section with printf
          modified_section=$(printf "%s" "$modified_section")

          # Generate the modified_changelog by inserting modified_section after the "What's Changed" section
          modified_changelog=$(awk -v modified_section="$modified_section" '
              /^## What'\''s Changed/ { print; print modified_section; f=1; next }
              f && /^$/ { f=0 }
              !f { print }
              END { if (f) print "" }
          ' ORS='\n' <<< "$changelog")

          # Format the modified_changelog by removing "@" characters and enclosing URLs in "<>"
          modified_changelog=$(echo "$modified_changelog" | sed -e 's/@//g' -e 's|https\?://[^[:space:]]*|<\0>|g')

          # Store the modified_changelog in the CHANGELOG variable
          CHANGELOG=$(echo -n "$modified_changelog")
          
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"

          echo "::set-output name=changelog::$CHANGELOG"

      - name: Changelog output
        shell: bash
        run: |
          echo '''
          "@here"
          "## Skyblocker 1.10.0"
          ""
          "## Changelog"
          "${{ steps.read_changelog.outputs.changelog }}"
          ":inbox_tray: Download latest version on Modrinth or Github:"
          "<:modrinth:900697862206287882> <link1>"
          "<:github:900697885706952725> <link2>"
          ""
          "<https://hysky.de/>" '''
